'''
 SPDX-License-Identifier: Apache-2.0
 Copyright 2019 Western Digital Corporation or its affiliates.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http:www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
'''
import os
import utils
Import('Env')

#
# This is a template file for adding a new module
# Duplicate this file and replace module_name with your module name
#   

# module output directory 
out_dir = os.path.join(Env['OUT_DIR_PATH'], 'comrv')
utils.fnCreateFolder(out_dir)

# C language source and out files in list of lists
# [sourcefile.c, outputfile.o]
list_files_c=[
#  ['location of c file to compile', 'location of resulting object file']
   [os.path.join('comrv', 'comrv.c'), os.path.join(out_dir, 'comrv.o')],
   [os.path.join('examples', 'ex-comrv-baremetal', 'main.c'), os.path.join(out_dir, 'main.o')],
]

# Assembly language source and out files in list of lists
# [sourcefile.S, outputfile.o]
list_files_a=[
#  ['location of assembly file to compile', 'location of resulting object file']
   [os.path.join('comrv', 'comrv_asm.S'), os.path.join(out_dir, 'comrv_asm.o')],
]

# compiler directives
c_compiler_directives = [] + Env['C_FLAGS']
a_compiler_directives = [] + Env['A_FLAGS']

# defines
c_defines = [] + Env['PUBLIC_DEF']

# include paths
Env['PUBLIC_INC'] += [os.path.join(Env['ROOT_DIR'], 'comrv', 'api_inc'),]

include_paths =  [
  os.path.join(Env['ROOT_DIR'], 'comrv', 'loc_inc'),
] + Env['PUBLIC_INC']


if not Env["Scan"]:
  # loop the list of c files and compile them
  objects = []
  for list_file in list_files_c:
    objects.append(Env.Object(source=os.path.join(Env['ROOT_DIR'],list_file[0]), target=list_file[1], CPPPATH=include_paths, CCFLAGS=c_compiler_directives, CPPDEFINES=c_defines))

  # loop the list of assembly files and compile them
  for list_file in list_files_a:
    objects.append(Env.Object(source=os.path.join(Env['ROOT_DIR'], list_file[0]), target=list_file[1], CPPPATH=include_paths, CCFLAGS=a_compiler_directives, CPPDEFINES=c_defines))

  # for libraries
  comrv_lib = Env.Library (target=os.path.join(Env['OUT_DIR_PATH'], 'libs', 'comrv.a'), source=objects)

  # return the comrv lib
  Return('comrv_lib')
